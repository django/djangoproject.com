# Generated by Django 2.1.5 on 2019-02-12 12:08

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('position', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Datum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('measurement', models.BigIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['-timestamp'],
                'get_latest_by': 'timestamp',
                'verbose_name_plural': 'data',
            },
        ),
        migrations.CreateModel(
            name='GithubItemCountMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('slug', models.SlugField()),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('show_on_dashboard', models.BooleanField(default=True)),
                ('show_sparkline', models.BooleanField(default=True)),
                ('period', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='instant', max_length=15)),
                ('unit', models.CharField(max_length=100)),
                ('unit_plural', models.CharField(max_length=100)),
                ('api_url', models.URLField(max_length=1000)),
                ('link_url', models.URLField(max_length=1000)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JenkinsFailuresMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('slug', models.SlugField()),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('show_on_dashboard', models.BooleanField(default=True)),
                ('show_sparkline', models.BooleanField(default=True)),
                ('period', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='instant', max_length=15)),
                ('unit', models.CharField(max_length=100)),
                ('unit_plural', models.CharField(max_length=100)),
                ('jenkins_root_url', models.URLField(help_text='E.g. http://ci.djangoproject.com/', max_length=1000, verbose_name='Jenkins instance root URL')),
                ('build_name', models.CharField(help_text='E.g. Django Python3', max_length=100)),
                ('is_success_cnt', models.BooleanField(default=False, help_text='E.g. if there are 50 tests of which 30 are failing the value of this metric will be 20 (or 40%.)', verbose_name='Should the metric be a value representing success ratio?')),
                ('is_percentage', models.BooleanField(default=False, help_text='E.g. if there are 50 tests of which 30 are failing the value of this metric will be 60%.', verbose_name='Should the metric be a percentage value?')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RSSFeedMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('slug', models.SlugField()),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('show_on_dashboard', models.BooleanField(default=True)),
                ('show_sparkline', models.BooleanField(default=True)),
                ('period', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='instant', max_length=15)),
                ('unit', models.CharField(max_length=100)),
                ('unit_plural', models.CharField(max_length=100)),
                ('feed_url', models.URLField(max_length=1000)),
                ('link_url', models.URLField(max_length=1000)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TracTicketMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('slug', models.SlugField()),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('show_on_dashboard', models.BooleanField(default=True)),
                ('show_sparkline', models.BooleanField(default=True)),
                ('period', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='instant', max_length=15)),
                ('unit', models.CharField(max_length=100)),
                ('unit_plural', models.CharField(max_length=100)),
                ('query', models.TextField()),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
